# platform = multi_platform_all
# complexity = low
# strategy = configure
# reboot = false
# disruption = high
- name: Add nodev Option to /home
  hosts: '@@HOSTS@@'
  become: true
  tags:
    - CCE-81047-3
    - configure_strategy
    - high_disruption
    - low_complexity
    - mount_option_home_nodev
    - no_reboot_needed
    - unknown_severity
  tasks:

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/home'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
        "container"]

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]

    - name: Make sure nodev option is part of the to /home options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nodev''
          }) }}'
      when:
        - mount_info is defined and "nodev" not in mount_info.options
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]

    - name: Ensure /home is mounted with nodev option
      mount:
        path: /home
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]
