# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv
# complexity = low
# strategy = restrict
# reboot = false
# disruption = low
- name: Ensure auditd Collects Information on the Use of Privileged Commands
  hosts: '@@HOSTS@@'
  become: true
  tags:
    - CCE-27437-3
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030360
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-6(9)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-10.2.2
    - audit_rules_privileged_commands
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Search for privileged commands
      shell: find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null
      args:
        warn: false
        executable: /bin/bash
      check_mode: false
      register: find_result
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
        "container"]

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path={{ item }} .*$
        patterns: '*.rules'
      with_items:
        - '{{ find_result.stdout_lines }}'
      register: files_result
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
        "container"]

    - name: Overwrites the rule in rules.d
      lineinfile:
        path: '{{ item.1.path }}'
        line: -a always,exit -F path={{ item.0.item }} -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: false
        regexp: ^.*path={{ item.0.item }} .*$
      with_subelements:
        - '{{ files_result.results }}'
        - files
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
        "container"]

    - name: Adds the rule in rules.d
      lineinfile:
        path: /etc/audit/rules.d/privileged.rules
        line: -a always,exit -F path={{ item.item }} -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      with_items:
        - '{{ files_result.results }}'
      when:
        - files_result.results is defined and item.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]

    - name: Inserts/replaces the rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path={{ item.item }} -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
        regexp: ^.*path={{ item.item }} .*$
      with_items:
        - '{{ files_result.results }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
        "container"]
